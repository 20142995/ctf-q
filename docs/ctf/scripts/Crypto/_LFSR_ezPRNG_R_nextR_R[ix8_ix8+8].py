'''
# hgame2024 ezPRNG
from Crypto.Util.number import *
import uuid
def PRNG(R,mask):
    nextR = (R << 1) & 0xffffffff
    i=(R&mask)&0xffffffff
    nextbit=0
    while i!=0:
        nextbit^=(i%2)
        i=i//2
    nextR^=nextbit
    return (nextR,nextbit)

R=str(uuid.uuid4())
flag='hgame{'+R+'}'
print(flag)
R=R.replace('-','')
Rlist=[int(R[i*8:i*8+8],16) for i in range(4)]

mask=0b10001001000010000100010010001001
output=[]
for i in range(4):
    R=Rlist[i]
    out=''
    for _ in range(1000):
        (R,nextbit)=PRNG(R,mask)
        out+=str(nextbit)
    output.append(out)

print(f'output={output}')
#output
'''
from Crypto.Util.number import *

output = [

    '0010100011011110101100000111101011101100101110011000110110101000010000011101000110100110011110101010100101000011100110110111000011111100100011001101110001100001010101011111001010100011001111111101001101101100111011011011010111101101010000001111010101011011110111101110100011011001101101010011001110011000100010100111001001111110100010100010010100111000001110101111001011101011010010110000010011000010001011011111101100111010001111100110010101011011010010110001001101010010100010010011000011001010110111000110110001001110001000110011111100000010001000000001010001010101000110101001100001100011100001011110011000111001101101001010000001101110101011010110110111010111011110010010110000011011010100101110100010001001010110011010110001101001111100010110111011110101001010000110101111000010101000111011010010011111111011101000101001001011011010110111111100001101110111111110001110001000010100110001111100100011011011001110010011000101001100110010000100110001101000111000101100101010001011100010000100111000',


flag = ''
for j in range(4):
    R = ''
    key = (output[j])[:32]
    temp = key
    for i in range(32):
        out = '?' + key[:31]
        ans = int(temp[-1 - i]) ^ int(out[-1]) ^ int(out[-4]) ^ int(out[-8]) ^ int(out[-11]) ^ int(out[-15]) ^ int(out[-20]) ^ int(out[-25]) ^ int(out[-28])
        R += str(ans)
        key = str(ans) + key[:31]
    R = format(int(R[::-1], 2), 'x')
    flag += R
print('VIDAR{' + flag + '}')
